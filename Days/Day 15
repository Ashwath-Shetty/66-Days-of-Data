list comprehension
newlist = [expression for item in iterable if condition == True]
e.x:
fruits = ["apple", "banana", "cherry", "kiwi", "mango"]

newlist = [x for x in fruits if "a" in x]

print(newlist)

lambda function
lambda arguments: expression
x ="GeeksforGeeks"
 
# lambda gets pass to print
(lambda x : print(x))(x)

Max = lambda a, b : a if(a > b) else b
 
print(Max(1, 2))

lambda with map
li = [5, 7, 22, 97, 54, 62, 77, 23, 73, 61]
 
final_list = list(map(lambda x: x*2, li))
print(final_list)
df['Engine volume_type']=df['Engine volume'].str.split(" ").map(lambda x:x[1] if len(x)>1 else 'Normal')

lambda with apply
DataFrame.apply(func, axis=0, raw=False, result_type=None, args=(), **kwargs)
df['Prod_year_club']= df['Prod. year'].apply(lambda x: 1982 if x<=1982 else x)

reference:
https://www.geeksforgeeks.org/python-lambda-anonymous-functions-filter-map-reduce/
https://www.w3schools.com/python/python_lists_comprehension.asp
https://github.com/analyticsindiamagazine/MachineHack/blob/master/Hackathon_Solutions/MATHCO_THON_The_Data_Scientist_Hiring_Hackathon_by_TheMathCompany/Sai_Sandeep_03_MATHCO.Thon.ipynb



